@using MudBlazor
@using Domain.Notifications.Entities
@using Domain.Orders.Entities
@using Application.Notifications
@using Application.Chats
@using Domain.Messages.Entities

@inject INotificationService NotificationService
@inject IMessageService MessageService

@if (_isLoading)
{
	<LoadingCardsComponent></LoadingCardsComponent>
}
else{
<MudList Clickable="true">
	<MudListItem DisableGutters="true" Href="@link">
		<div style="display: flex; margin-left:10px;">
			<div style="margin-right:8px">
				<MudAvatar Image="https://cdn-icons-png.flaticon.com/512/1738/1738691.png" Style="height: 40px; width: 40px" />
			</div>
			<div>
				<h6>Chat con @order.RecipientId</h6>
				<p>@testo</p>
			</div>
			@if (!false)
			{
				<div style=" height: 40px; width: 20px ;margin:10px">
					<MudBadge  Color="Color.Info" Style=""/>
			</div>
			}
		</div>
	</MudListItem>
</MudList>
}

@code {
	// Declaring parameters
	[Parameter]
	public Order order { get; set; } 

	public string link { get; set; }

	public IEnumerable<Message> _Messages;

	public String testo;

	bool _isLoading = true;


	protected override async Task OnInitializedAsync()
	{
		link = "chatRoom/" + order.Id;
		_Messages = await MessageService.GetMessagesAsync(order.Id);
		testo = _Messages.Last().Text;
		_isLoading = false;
	}



}

